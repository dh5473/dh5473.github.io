{"version":3,"file":"a39c196d-d24f8bb01bfb359ede50.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport CategoryList from 'components/Main/CategoryList'\nimport PostList from 'components/Main/PostList'\nimport { graphql } from 'gatsby'\nimport { PostListItemType } from 'types/PostItem.types'\nimport queryString, { ParsedQuery } from 'query-string'\nimport Template from 'components/Common/Template'\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n  }\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #ffffff;\n`\n\nconst Header = styled.header`\n  background: #ffffff;\n  border-bottom: 1px solid #f1f3f4;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n`\n\nconst HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n\n  @media (max-width: 768px) {\n    padding: 0 16px;\n    height: 56px;\n  }\n`\n\nconst Logo = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  color: #1a1a1a;\n\n  span {\n    color: #3182f6;\n  }\n`\n\nconst HeaderButtons = styled.div`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    gap: 12px;\n  }\n`\n\nconst HireButton = styled.button`\n  background: #3182f6;\n  border: none;\n  border-radius: 8px;\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #2563eb;\n  }\n\n  @media (max-width: 768px) {\n    padding: 6px 12px;\n    font-size: 13px;\n  }\n`\n\nconst MainContent = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 24px;\n\n  @media (max-width: 768px) {\n    padding: 0 16px;\n  }\n`\n\nconst ContentLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 320px;\n  gap: 48px;\n  margin-top: 32px;\n\n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    gap: 32px;\n  }\n\n  @media (max-width: 768px) {\n    gap: 24px;\n  }\n`\n\nconst MainSection = styled.section`\n  min-width: 0;\n`\n\nconst Sidebar = styled.aside`\n  @media (max-width: 1024px) {\n    order: -1;\n  }\n`\n\nconst SidebarSection = styled.div`\n  margin-bottom: 48px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 768px) {\n    margin-bottom: 32px;\n  }\n`\n\nconst SidebarTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  color: #1a1a1a;\n  margin: 0 0 16px 0;\n  padding-bottom: 8px;\n  border-bottom: 2px solid #3182f6;\n`\n\nconst PopularPostItem = styled.div`\n  padding: 16px 0;\n  border-bottom: 1px solid #f1f3f4;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`\n\nconst PopularPostTitle = styled.h4`\n  font-size: 14px;\n  font-weight: 600;\n  color: #1a1a1a;\n  margin: 0 0 4px 0;\n  line-height: 1.4;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`\n\nconst SeriesItem = styled.div`\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  margin-bottom: 12px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst SeriesTitle = styled.h4`\n  font-size: 14px;\n  font-weight: 600;\n  color: #1a1a1a;\n  margin: 0 0 4px 0;\n`\n\nconst SeriesDescription = styled.p`\n  font-size: 12px;\n  color: #6b7280;\n  margin: 0 0 8px 0;\n  line-height: 1.4;\n`\n\nconst SeriesCount = styled.span`\n  font-size: 11px;\n  color: #3182f6;\n  font-weight: 500;\n`\n\nconst HeroSection = styled.section`\n  padding: 80px 0;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    padding: 60px 0;\n  }\n`\n\nconst HeroTitle = styled.h1`\n  font-size: 48px;\n  font-weight: 700;\n  color: #1a1a1a;\n  margin: 0 0 16px 0;\n  line-height: 1.2;\n\n  @media (max-width: 768px) {\n    font-size: 32px;\n  }\n`\n\nconst HeroSubtitle = styled.p`\n  font-size: 20px;\n  color: #6b7280;\n  margin: 0;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }, [selectedCategory])\n\n  // 인기 글 임시 데이터 (실제로는 조회수나 좋아요 수를 기반으로 가져와야 함)\n  const popularPosts = edges.slice(0, 3).map(({ node }) => ({\n    title: node.frontmatter.title,\n  }))\n\n  return (\n    <Template>\n      <Container>\n        <Header>\n          <HeaderContent>\n            <Logo>\n              <span>dev</span>.blog\n            </Logo>\n            <HeaderButtons>\n              <HireButton>문의하기</HireButton>\n            </HeaderButtons>\n          </HeaderContent>\n        </Header>\n\n        <MainContent>\n          <HeroSection>\n            <HeroTitle>개발자의 성장 이야기</HeroTitle>\n            <HeroSubtitle>배우고 경험하는 모든 것을 기록합니다</HeroSubtitle>\n          </HeroSection>\n\n          <CategoryList selectedCategory={selectedCategory} />\n\n          <ContentLayout>\n            <MainSection>\n              <PostList selectedCategory={selectedCategory} posts={edges} />\n            </MainSection>\n\n            <Sidebar>\n              <SidebarSection>\n                <SidebarTitle>인기있는 글</SidebarTitle>\n                {popularPosts.map((post, index) => (\n                  <PopularPostItem key={index}>\n                    <PopularPostTitle>{post.title}</PopularPostTitle>\n                  </PopularPostItem>\n                ))}\n              </SidebarSection>\n\n              <SidebarSection>\n                <SidebarTitle>아티클 시리즈</SidebarTitle>\n                <SeriesItem>\n                  <SeriesTitle>React 심화 학습</SeriesTitle>\n                  <SeriesDescription>\n                    React의 고급 기능과 패턴을 다루는 시리즈\n                  </SeriesDescription>\n                  <SeriesCount>아티클 5</SeriesCount>\n                </SeriesItem>\n                <SeriesItem>\n                  <SeriesTitle>개발자 성장기</SeriesTitle>\n                  <SeriesDescription>\n                    개발자로서의 경험과 성장 과정을 기록한 시리즈\n                  </SeriesDescription>\n                  <SeriesCount>아티클 3</SeriesCount>\n                </SeriesItem>\n              </SidebarSection>\n            </Sidebar>\n          </ContentLayout>\n        </MainContent>\n      </Container>\n    </Template>\n  )\n}\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            category\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Container","_styled","target","name","styles","Header","HeaderContent","Logo","HeaderButtons","HireButton","MainContent","ContentLayout","MainSection","Sidebar","SidebarSection","SidebarTitle","PopularPostItem","PopularPostTitle","SeriesItem","SeriesTitle","SeriesDescription","SeriesCount","HeroSection","HeroTitle","HeroSubtitle","_ref","location","search","data","allMarkdownRemark","edges","parsed","queryString","parse","selectedCategory","category","useEffect","window","scrollTo","top","behavior","popularPosts","slice","map","_ref2","node","title","frontmatter","___EmotionJSX","Template","CategoryList","PostList","posts","post","index","key"],"sourceRoot":""}